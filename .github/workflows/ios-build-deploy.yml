name: iOS Auto Build and Deploy

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'GitHub repository URL'
        required: true
        type: string
      app_name:
        description: 'App name for App Store'
        required: true
        type: string
      bundle_identifier:
        description: 'Bundle identifier'
        required: true
        type: string
      category:
        description: 'App category'
        required: false
        type: string
        default: 'UTILITIES'
      description:
        description: 'App description'
        required: false
        type: string
      keywords:
        description: 'App keywords'
        required: false
        type: string
      copyright:
        description: 'Copyright text'
        required: false
        type: string
      privacy_policy_url:
        description: 'Privacy policy URL'
        required: false
        type: string
      first_name:
        description: 'Review contact first name'
        required: false
        type: string
      email:
        description: 'Review contact email'
        required: false
        type: string

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_url || 'bariamanoj/NewAppSample' }}
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    
    - name: Install Fastlane
      run: gem install fastlane

    - name: Build and Setup App Store Metadata
      run: |
        echo "🔐 Building with complete App Store automation"
        
        mkdir -p fastlane
        cat > fastlane/Fastfile << 'EOF'
        default_platform(:ios)

        platform :ios do
          desc "Add export compliance key to Info.plist"
          lane :add_compliance_key do |options|
            info_plist_path = nil
            
            if Dir.glob("**/Info.plist").any?
              info_plist_path = Dir.glob("**/Info.plist").find { |path| !path.include?('build') && !path.include?('Pods') }
            end
            
            if info_plist_path && File.exist?(info_plist_path)
              set_info_plist_value(
                path: info_plist_path,
                key: "ITSAppUsesNonExemptEncryption",
                value: false
              )
              UI.success("Added export compliance key to #{info_plist_path}")
            else
              UI.message("Info.plist not found, compliance will be handled during upload")
            end
          end

          desc "Setup App Store Connect metadata"
          lane :setup_metadata do |options|
            # Create app if it doesn't exist
            produce(
              username: "dohrasanket@gmail.com",
              app_name: "ManzTestApp2025",
              app_identifier: "com.san.mainAp",
              language: "en-US",
              app_version: ENV["VERSION_NUMBER"] || "1.0",
              sku: "com-san-mainAp-#{Time.now.to_i}",
              skip_itc: false,
              skip_devcenter: false
            )
            
            # Upload metadata
            deliver(
              username: "dohrasanket@gmail.com",
              app_identifier: "com.san.mainAp",
              app_version: ENV["VERSION_NUMBER"] || "1.0",
              description: {
                "en-US" => ENV["APP_DESCRIPTION"] || "Sample app description"
              },
              keywords: {
                "en-US" => ENV["APP_KEYWORDS"] || "app"
              },
              copyright: ENV["APP_COPYRIGHT"] || "2025 Company",
              marketing_url: {
                "en-US" => ENV["MARKETING_URL"]
              },
              privacy_url: {
                "en-US" => ENV["PRIVACY_POLICY_URL"]
              },
              primary_category: ENV["APP_CATEGORY"] || "UTILITIES",
              price_tier: ENV["PRICE_TIER"] || "0",
              release_notes: {
                "en-US" => ENV["VERSION_WHATS_NEW"] || "Bug fixes and improvements"
              },
              app_review_information: {
                first_name: ENV["REVIEW_FIRST_NAME"] || "John",
                last_name: ENV["REVIEW_LAST_NAME"] || "Doe",
                phone_number: ENV["REVIEW_PHONE"] || "+1234567890",
                email_address: ENV["REVIEW_EMAIL"] || "test@example.com",
                demo_user: "",
                demo_password: "",
                notes: ENV["REVIEW_NOTES"] || "No special instructions"
              },
              submission_information: {
                add_id_info_limits_tracking: true,
                add_id_info_serves_ads: false,
                add_id_info_tracks_action: false,
                add_id_info_tracks_install: false,
                add_id_info_uses_idfa: false,
                content_rights_has_rights: true,
                content_rights_contains_third_party_content: false,
                export_compliance_platform: "ios",
                export_compliance_compliance_required: false,
                export_compliance_encryption_updated: false,
                export_compliance_app_type: nil,
                export_compliance_uses_encryption: false,
                export_compliance_is_exempt: true,
                export_compliance_contains_third_party_cryptography: false,
                export_compliance_contains_proprietary_cryptography: false,
                export_compliance_available_on_french_store: true
              },
              skip_screenshots: true,
              skip_metadata: false,
              force: true,
              overwrite_screenshots: false
            )
          end

          desc "Build with Fastlane automatic provisioning"
          lane :build_and_sign do
            add_compliance_key
            
            app_store_connect_api_key(
              key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
              issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
              key_content: ENV["APP_STORE_CONNECT_API_KEY_KEY"],
              duration: 1200,
              in_house: false
            )
            
            create_keychain(
              name: "fastlane_tmp_keychain",
              password: "temppassword123",
              default_keychain: true,
              unlock: true,
              timeout: 3600,
              lock_when_sleeps: false
            )
            
            match(
              type: "appstore",
              app_identifier: "com.san.mainAp",
              git_url: "https://github.com/bariamanoj/ios-certificates-new",
              username: "dohrasanket@gmail.com",
              team_id: "42FLQUC3A9",
              readonly: false,
              keychain_name: "fastlane_tmp_keychain",
              keychain_password: "temppassword123"
            )
            
            update_project_provisioning(
              xcodeproj: "NewAppSample.xcodeproj",
              target_filter: "NewAppSample",
              profile: ENV["sigh_com.san.mainAp_appstore_profile-path"],
              code_signing_identity: "iPhone Distribution"
            )
            
            gym(
              configuration: "Release",
              export_method: "app-store",
              sdk: "iphoneos",
              export_options: {
                method: "app-store",
                teamID: "42FLQUC3A9",
                uploadBitcode: false,
                uploadSymbols: true,
                signingStyle: "manual"
              },
              output_directory: "./build/ipa",
              output_name: "ManzTestApp2025.ipa",
              archive_path: "./build/archive/ManzTestApp2025.xcarchive"
            )
          end
        end
        EOF
        
        fastlane build_and_sign
        fastlane setup_metadata
        
      env:
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        FASTLANE_PASSWORD: "Sanket_4392"
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "xzwz-wtfs-wptw-bhhe"
        MATCH_PASSWORD: "Welcome123"
        APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        # App Metadata (using inputs + hardcoded defaults)
        APP_CATEGORY: ${{ github.event.inputs.category }}
        APP_DESCRIPTION: ${{ github.event.inputs.description }}
        APP_KEYWORDS: ${{ github.event.inputs.keywords }}
        APP_COPYRIGHT: ${{ github.event.inputs.copyright }}
        MARKETING_URL: "https://dohrasanket.pages.dev/"
        PRIVACY_POLICY_URL: ${{ github.event.inputs.privacy_policy_url }}
        PRICE_TIER: "0"
        VERSION_WHATS_NEW: "Initial release"
        VERSION_NUMBER: "1.0"
        # Review Info (using inputs + hardcoded defaults)
        REVIEW_FIRST_NAME: ${{ github.event.inputs.first_name }}
        REVIEW_LAST_NAME: "DOHRA"
        REVIEW_PHONE: "+91 9265171259"
        REVIEW_EMAIL: ${{ github.event.inputs.email }}
        REVIEW_NOTES: "This is a sample demo app for testing purposes."

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.event.inputs.app_name || 'ManzTestApp2025' }}
        path: build/
        if-no-files-found: warn

    - name: Submit to App Store for Review
      run: |
        echo "🚀 Submitting to App Store for review"
        
        IPA_FILE=$(find build/ipa -name "*.ipa" | head -1)
        
        if [ -n "$IPA_FILE" ]; then
          echo "📱 Found IPA: $IPA_FILE"
          
          fastlane run upload_to_app_store \
            ipa:"$IPA_FILE" \
            username:"dohrasanket@gmail.com" \
            skip_screenshots:true \
            skip_metadata:true \
            skip_app_version_update:true \
            submit_for_review:true \
            automatic_release:true \
            force:true
            
          echo "✅ Submitted for App Store review!"
        else
          echo "⚠️ No IPA found to upload"
        fi
      env:
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        FASTLANE_PASSWORD: "Sanket_4392"
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "xzwz-wtfs-wptw-bhhe"
        MATCH_PASSWORD: "Welcome123"
        APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
