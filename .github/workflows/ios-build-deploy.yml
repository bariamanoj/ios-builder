name: iOS Auto Build and Deploy

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'GitHub repository URL'
        required: true
        type: string
      app_name:
        description: 'App name for App Store'
        required: true
        type: string
      bundle_identifier:
        description: 'Bundle identifier (e.g., com.company.app)'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_url }}
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    
    - name: Install Fastlane
      run: gem install fastlane
    
    - name: Build iOS Archive
      run: |
        echo "üöÄ iOS Build Pipeline"
        echo "Current directory: $(pwd)"
        echo "Files in directory:"
        ls -la
        echo ""
        
        # Check for Xcode projects (directories ending in .xcodeproj)
        if find . -maxdepth 1 -name "*.xcworkspace" -type d | grep -q .; then
          WORKSPACE=$(find . -maxdepth 1 -name "*.xcworkspace" -type d | head -1 | sed 's|^\./||')
          SCHEME=$(basename "$WORKSPACE" .xcworkspace)
          echo "üì± Found workspace: $WORKSPACE"
          echo "üéØ Using scheme: $SCHEME"
          
          fastlane run build_app \
            workspace:"$WORKSPACE" \
            scheme:"$SCHEME" \
            configuration:"Release" \
            export_method:"app-store" \
            skip_package_ipa:false \
            xcargs:"CODE_SIGNING_ALLOWED=NO"
            
        elif find . -maxdepth 1 -name "*.xcodeproj" -type d | grep -q .; then
          PROJECT=$(find . -maxdepth 1 -name "*.xcodeproj" -type d | head -1 | sed 's|^\./||')
          SCHEME=$(basename "$PROJECT" .xcodeproj)
          echo "üì± Found project: $PROJECT"
          echo "üéØ Using scheme: $SCHEME"
          
          fastlane run build_app \
            project:"$PROJECT" \
            scheme:"$SCHEME" \
            configuration:"Release" \
            export_method:"app-store" \
            skip_package_ipa:false \
            xcargs:"CODE_SIGNING_ALLOWED=NO"
            
        else
          echo "‚ùå No Xcode project found!"
          echo "Available .xcodeproj directories:"
          find . -name "*.xcodeproj" -type d
          echo "Available .xcworkspace directories:"
          find . -name "*.xcworkspace" -type d
          exit 1
        fi
        
        echo "‚úÖ Build completed!"
        echo "üì¶ App: ${{ github.event.inputs.app_name }}"
        echo "üÜî Bundle: ${{ github.event.inputs.bundle_identifier }}"
      env:
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.event.inputs.app_name }}
        path: |
          *.ipa
          *.xcarchive
          build/
        if-no-files-found: warn
