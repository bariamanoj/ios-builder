name: iOS Auto Build and Deploy

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'GitHub repository URL'
        required: true
        type: string
      app_name:
        description: 'App name for App Store'
        required: true
        type: string
      bundle_identifier:
        description: 'Bundle identifier (e.g., com.company.app)'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_url }}
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    
    - name: Install Fastlane
      run: gem install fastlane
    
    - name: Setup API Key
      run: |
        mkdir -p ~/.appstoreconnect/private_keys/
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}" > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}.p8
        
        # Set up API key for Fastlane
        if [ -n "${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}" ]; then
          export FASTLANE_API_KEY_PATH="~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}.p8"
          export APP_STORE_CONNECT_API_KEY_KEY_ID="${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}"
          export APP_STORE_CONNECT_API_KEY_ISSUER_ID="${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}"
        fi
    
    - name: Create App on App Store Connect
      run: |
        echo "üçé Creating app on App Store Connect"
        
        # Use username/password authentication for individual accounts
        fastlane run produce \
          app_name:"${{ github.event.inputs.app_name }}" \
          app_identifier:"${{ github.event.inputs.bundle_identifier }}" \
          language:"en-US" \
          app_version:"1.0" \
          sku:"$(echo "${{ github.event.inputs.bundle_identifier }}" | sed 's/\./-/g')-$(date +%s)" \
          username:"dohrasanket@gmail.com" \
          team_id:"42FLQUC3A9" \
          skip_itc:false \
          skip_devcenter:false
      env:
        FASTLANE_PASSWORD: "Sanket_4392"
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "xzwz-wtfs-wptw-bhhe"
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
      continue-on-error: true
    
    - name: Build and Create Archive
      run: |
        echo "üöÄ Creating iOS Archive"
        echo "üì¶ App: ${{ github.event.inputs.app_name }}"
        echo "üÜî Bundle: ${{ github.event.inputs.bundle_identifier }}"
        
        # Find project
        if find . -maxdepth 1 -name "*.xcworkspace" -type d | grep -q .; then
          WORKSPACE=$(find . -maxdepth 1 -name "*.xcworkspace" -type d | head -1 | sed 's|^\./||')
          SCHEME=$(basename "$WORKSPACE" .xcworkspace)
          echo "üì± Archiving workspace: $WORKSPACE"
          
          xcodebuild -workspace "$WORKSPACE" \
                     -scheme "$SCHEME" \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath "build/$SCHEME.xcarchive" \
                     CODE_SIGNING_ALLOWED=NO \
                     archive
            
        elif find . -maxdepth 1 -name "*.xcodeproj" -type d | grep -q .; then
          PROJECT=$(find . -maxdepth 1 -name "*.xcodeproj" -type d | head -1 | sed 's|^\./||')
          SCHEME=$(basename "$PROJECT" .xcodeproj)
          echo "üì± Archiving project: $PROJECT"
          
          xcodebuild -project "$PROJECT" \
                     -scheme "$SCHEME" \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath "build/$SCHEME.xcarchive" \
                     CODE_SIGNING_ALLOWED=NO \
                     archive
        fi
        
        echo "‚úÖ Archive created successfully!"
        ls -la build/
      env:
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
    
    - name: Export IPA (Unsigned)
      run: |
        echo "üì¶ Exporting IPA"
        
        # Find archive
        ARCHIVE=$(find build -name "*.xcarchive" | head -1)
        if [ -n "$ARCHIVE" ]; then
          echo "üì± Exporting from: $ARCHIVE"
          
          # Create IPA manually
          mkdir -p build/ipa
          
          # Extract app bundle from archive
          find "$ARCHIVE/Products/Applications" -name "*.app" -exec cp -r {} build/ipa/ \;
          
          # Create IPA with proper naming
          cd build/ipa
          APP_FILE=$(find . -name "*.app" -type d | head -1 | sed 's|^\./||')
          APP_NAME="${{ github.event.inputs.app_name }}"
          
          if [ -n "$APP_FILE" ]; then
            mkdir -p Payload
            mv "$APP_FILE" Payload/
            zip -r "$APP_NAME.ipa" Payload/
            rm -rf Payload/
            
            echo "‚úÖ IPA created successfully!"
            ls -la *.ipa
          else
            echo "‚ùå No .app bundle found"
          fi
        else
          echo "‚ùå No archive found to export"
        fi
      continue-on-error: true
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.event.inputs.app_name }}
        path: |
          build/
        if-no-files-found: warn
    
    - name: Upload to App Store Connect (Optional)
      run: |
        echo "üöÄ Attempting to upload to App Store Connect"
        
        # Find the IPA file
        IPA_FILE=$(find build/ipa -name "*.ipa" | head -1)
        
        if [ -n "$IPA_FILE" ]; then
          echo "üì± Found IPA: $IPA_FILE"
          echo "üîë Using username/password authentication"
          
          # Upload using Fastlane with username/password
          fastlane run upload_to_app_store \
            ipa:"$IPA_FILE" \
            username:"dohrasanket@gmail.com" \
            team_id:"42FLQUC3A9" \
            skip_screenshots:true \
            skip_metadata:true \
            skip_app_version_update:true \
            force:true \
            precheck_include_in_app_purchases:false
            
          echo "‚úÖ Upload completed!"
        else
          echo "‚ö†Ô∏è No IPA found to upload"
        fi
      env:
        FASTLANE_PASSWORD: "Sanket_4392"
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "xzwz-wtfs-wptw-bhhe"
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
      continue-on-error: true
