name: iOS Auto Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'GitHub repository URL'
        required: true
        type: string
      app_name:
        description: 'App name for App Store'
        required: true
        type: string
      bundle_identifier:
        description: 'Bundle identifier (e.g., com.company.app)'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_url || 'bariamanoj/NewAppSample' }}
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    
    - name: Install Fastlane
      run: gem install fastlane

    - name: Generate Certificates and Provisioning Profiles
      run: |
        echo "🔐 Generating certificates and provisioning profiles"
        
        # Create Fastfile for certificate generation
        mkdir -p fastlane
        cat > fastlane/Fastfile << 'FASTFILE_EOF'
        default_platform(:ios)

        platform :ios do
          desc "Generate certificates and provisioning profiles"
          lane :setup_certificates do
            # Generate distribution certificate
            cert(
              development: false,
              username: "dohrasanket@gmail.com",
              team_id: "42FLQUC3A9",
              output_path: "./certificates/"
            )
            
            # Generate provisioning profile
            sigh(
              app_identifier: "com.san.mainAp",
              username: "dohrasanket@gmail.com", 
              team_id: "42FLQUC3A9",
              output_path: "./certificates/",
              filename: "com.san.mainAp.mobileprovision"
            )
          end
        end
        FASTFILE_EOF
        
        # Create certificates directory
        mkdir -p certificates
        
        # Run certificate generation
        fastlane setup_certificates
        
        # List generated files
        echo "📋 Generated certificates:"
        ls -la certificates/
        
      env:
        FASTLANE_SESSION: |
          ---
          - !ruby/object:HTTP::Cookie
            name: myacinfo
            value: DAWTKNV323952cf8084a204fb20ab2508441a07d02d31682d52b3e48b21adf034bc3ca063af317ef1d0446120eb4b9931b5aac7576c77d5d7722b8140af28804e60874227cee398a5986c459a3962b6a59b6c2dc03a975a1b6b097125317315a69e3148f6b70688d32b35a87bae0cc8efd716245e51977d2e1cdb524498a08565fe1ac33b907d0329454920051718badcce91a2f1b313b9e0736a21a5c8ced47ef8f76b7efa32d7d270591950d4bc2096e633a4bd2f485ddf137b7992a764ec403743e77d648cac095d94d9e6667d71ac33ef753c77e5d9dc5ecf70e8728cad6e8c29f0fb377e585d25811e1fa7d4ad7bb70be40f7cafd7c5347c8d23d532875a7069d2e97dd9f462b75b4821816ae4b7475f0b57f3329f444e708d368c5ae7bb71c31b9b19b118a270f41fd6ae15a92f06298244eaa3c956223ad5df2db82a257e74641c3ee944a2f3b9f536d8707762fbf94943a1c78bc429b6806498a527f227e165873d1f4aba700e63496d9c3f03b6b82af31d72e4dda389ec87b2d226984e90333f8f1e921ef6b3f04ae62423faf8d9d894d192ebac01d02c15c11472564720fe64a96810904f982e27e1ec27dbdf086a2871c21afb6281768a1b0c775df82d7a780285279e2b8107e34470b1628809351e795ffef826e2f306ccf1276521a7fa6c31c139dbaaaddda166ae24312a1c32d29d5bbf815e9f89edc4ae98f16c426c34c0710d6b29d274fe2645c9b7bc7bc62dcd0585a47V3
            domain: apple.com
            for_domain: true
            path: "/"
            secure: true
            httponly: true
            expires:
            max_age:
            created_at: 2025-10-13 19:48:13.927056000 +05:30
            accessed_at: 2025-10-13 19:51:41.272398000 +05:30
          - !ruby/object:HTTP::Cookie
            name: DES521e216212c21f11a57fea7444394ae78
            value: HSARMTKNSRVXWFlaT2xBLF+Quc4blkCklk9hmyJARkstbGcBSuzM9C1BydSr5uYzKaWm5qX+VzcW7nRHSOXOegc3ZXJG+6vIg8ERyLZLOR5ZsOwVzwt/QfKVHUK8LlN0tCsXfp4ah+TKi73ddCfmY3dEFonCJ/BUwLOhipg78JXJUjtzZLIqXU0b1e31YWqFDw==SRVX
            domain: idmsa.apple.com
            for_domain: true
            path: "/"
            secure: true
            httponly: true
            expires:
            max_age: 2592000
            created_at: 2025-10-10 11:30:12.666718000 +05:30
            accessed_at: 2025-10-13 19:48:11.388795000 +05:30
          - !ruby/object:HTTP::Cookie
            name: dqsid
            value: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NjAzNjUwOTQsImp0aSI6IkgzUWRKWDhDck9JYU8wcnFMMk10S3cifQ.rsJDyyRTE71e3m2i6zFRDaIYUrf9t5rYeuKXswCkgbI
            domain: appstoreconnect.apple.com
            for_domain: false
            path: "/"
            secure: true
            httponly: true
            expires:
            max_age: 1800
            created_at: &1 2025-10-13 19:51:42.479986000 +05:30
            accessed_at: *1
        FASTLANE_PASSWORD: "Sanket_4392"
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "xzwz-wtfs-wptw-bhhe"
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
      continue-on-error: true

    - name: Install Certificates
      run: |
        echo "📲 Installing certificates in keychain"
        
        # Create temporary keychain
        security create-keychain -p "temp123" temp.keychain
        security default-keychain -s temp.keychain
        security unlock-keychain -p "temp123" temp.keychain
        security set-keychain-settings -t 3600 -u temp.keychain
        
        # Install certificates if they exist
        if [ -f "certificates/*.cer" ]; then
          security import certificates/*.cer -k temp.keychain -T /usr/bin/codesign
        fi
        
        if [ -f "certificates/*.p12" ]; then
          security import certificates/*.p12 -k temp.keychain -P "" -T /usr/bin/codesign
        fi
        
        # Install provisioning profile
        if [ -f "certificates/*.mobileprovision" ]; then
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp certificates/*.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        fi
        
        echo "✅ Certificates and profiles installed"
      continue-on-error: true

    - name: Build and Create Archive
      run: |
        echo "🚀 Creating iOS Archive"
        echo "📦 App: ${{ github.event.inputs.app_name || 'NewAppSample1' }}"
        echo "🆔 Bundle: ${{ github.event.inputs.bundle_identifier || 'com.san.mainAp' }}"
        
        # Find project
        if find . -maxdepth 1 -name "*.xcworkspace" -type d | grep -q .; then
          WORKSPACE=$(find . -maxdepth 1 -name "*.xcworkspace" -type d | head -1 | sed 's|^\./||')
          SCHEME=$(basename "$WORKSPACE" .xcworkspace)
          echo "📱 Archiving workspace: $WORKSPACE"
          
          xcodebuild -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Release \
            -archivePath "./build/$SCHEME.xcarchive" \
            -destination "generic/platform=iOS" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM=42FLQUC3A9 \
            archive
            
        elif find . -maxdepth 1 -name "*.xcodeproj" -type d | grep -q .; then
          PROJECT=$(find . -maxdepth 1 -name "*.xcodeproj" -type d | head -1 | sed 's|^\./||')
          SCHEME=$(basename "$PROJECT" .xcodeproj)
          echo "📱 Archiving project: $PROJECT"
          
          xcodebuild -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -archivePath "./build/$SCHEME.xcarchive" \
            -destination "generic/platform=iOS" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM=42FLQUC3A9 \
            archive
        else
          echo "❌ No Xcode project or workspace found"
          exit 1
        fi
      continue-on-error: true

    - name: Export IPA
      run: |
        echo "📦 Exporting IPA"
        
        # Find archive
        ARCHIVE=$(find build -name "*.xcarchive" | head -1)
        
        if [ -n "$ARCHIVE" ]; then
          echo "✅ Archive created successfully!"
          ls -la build/
          
          # Create export directory
          mkdir -p build/ipa
          
          # Manual IPA creation (since export might fail without proper provisioning)
          echo "🔧 Creating IPA manually"
          
          # Find the .app bundle in the archive
          APP_BUNDLE=$(find "$ARCHIVE" -name "*.app" | head -1)
          
          if [ -n "$APP_BUNDLE" ]; then
            # Create Payload directory
            mkdir -p build/ipa/Payload
            
            # Copy app bundle to Payload
            cp -R "$APP_BUNDLE" build/ipa/Payload/
            
            # Create IPA
            cd build/ipa
            zip -r "${{ github.event.inputs.app_name || 'NewAppSample1' }}.ipa" Payload/
            cd ../..
            
            echo "✅ IPA created: build/ipa/${{ github.event.inputs.app_name || 'NewAppSample1' }}.ipa"
            ls -la build/ipa/
          else
            echo "❌ No .app bundle found in archive"
          fi
        else
          echo "❌ No archive found to export"
        fi
      continue-on-error: true
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.event.inputs.app_name || 'NewAppSample1' }}
        path: |
          build/
        if-no-files-found: warn

    - name: Upload to App Store Connect
      run: |
        echo "🚀 Attempting to upload to App Store Connect"
        
        # Find the IPA file
        IPA_FILE=$(find build/ipa -name "*.ipa" | head -1)
        
        if [ -n "$IPA_FILE" ]; then
          echo "📱 Found IPA: $IPA_FILE"
          echo "🔑 Using session token authentication"
          
          # Use upload_to_testflight (like reference project)
          fastlane run upload_to_testflight \
            ipa:"$IPA_FILE" \
            username:"dohrasanket@gmail.com" \
            skip_waiting_for_build_processing:true
            
          echo "✅ Upload completed!"
        else
          echo "⚠️ No IPA found to upload"
        fi
      env:
        FASTLANE_SESSION: |
          ---
          - !ruby/object:HTTP::Cookie
            name: myacinfo
            value: DAWTKNV323952cf8084a204fb20ab2508441a07d02d31682d52b3e48b21adf034bc3ca063af317ef1d0446120eb4b9931b5aac7576c77d5d7722b8140af28804e60874227cee398a5986c459a3962b6a59b6c2dc03a975a1b6b097125317315a69e3148f6b70688d32b35a87bae0cc8efd716245e51977d2e1cdb524498a08565fe1ac33b907d0329454920051718badcce91a2f1b313b9e0736a21a5c8ced47ef8f76b7efa32d7d270591950d4bc2096e633a4bd2f485ddf137b7992a764ec403743e77d648cac095d94d9e6667d71ac33ef753c77e5d9dc5ecf70e8728cad6e8c29f0fb377e585d25811e1fa7d4ad7bb70be40f7cafd7c5347c8d23d532875a7069d2e97dd9f462b75b4821816ae4b7475f0b57f3329f444e708d368c5ae7bb71c31b9b19b118a270f41fd6ae15a92f06298244eaa3c956223ad5df2db82a257e74641c3ee944a2f3b9f536d8707762fbf94943a1c78bc429b6806498a527f227e165873d1f4aba700e63496d9c3f03b6b82af31d72e4dda389ec87b2d226984e90333f8f1e921ef6b3f04ae62423faf8d9d894d192ebac01d02c15c11472564720fe64a96810904f982e27e1ec27dbdf086a2871c21afb6281768a1b0c775df82d7a780285279e2b8107e34470b1628809351e795ffef826e2f306ccf1276521a7fa6c31c139dbaaaddda166ae24312a1c32d29d5bbf815e9f89edc4ae98f16c426c34c0710d6b29d274fe2645c9b7bc7bc62dcd0585a47V3
            domain: apple.com
            for_domain: true
            path: "/"
            secure: true
            httponly: true
            expires:
            max_age:
            created_at: 2025-10-13 19:48:13.927056000 +05:30
            accessed_at: 2025-10-13 19:51:41.272398000 +05:30
          - !ruby/object:HTTP::Cookie
            name: DES521e216212c21f11a57fea7444394ae78
            value: HSARMTKNSRVXWFlaT2xBLF+Quc4blkCklk9hmyJARkstbGcBSuzM9C1BydSr5uYzKaWm5qX+VzcW7nRHSOXOegc3ZXJG+6vIg8ERyLZLOR5ZsOwVzwt/QfKVHUK8LlN0tCsXfp4ah+TKi73ddCfmY3dEFonCJ/BUwLOhipg78JXJUjtzZLIqXU0b1e31YWqFDw==SRVX
            domain: idmsa.apple.com
            for_domain: true
            path: "/"
            secure: true
            httponly: true
            expires:
            max_age: 2592000
            created_at: 2025-10-10 11:30:12.666718000 +05:30
            accessed_at: 2025-10-13 19:48:11.388795000 +05:30
          - !ruby/object:HTTP::Cookie
            name: dqsid
            value: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NjAzNjUwOTQsImp0aSI6IkgzUWRKWDhDck9JYU8wcnFMMk10S3cifQ.rsJDyyRTE71e3m2i6zFRDaIYUrf9t5rYeuKXswCkgbI
            domain: appstoreconnect.apple.com
            for_domain: false
            path: "/"
            secure: true
            httponly: true
            expires:
            max_age: 1800
            created_at: &1 2025-10-13 19:51:42.479986000 +05:30
            accessed_at: *1
        FASTLANE_PASSWORD: "Sanket_4392"
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: "xzwz-wtfs-wptw-bhhe"
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
      continue-on-error: true
