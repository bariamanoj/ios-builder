name: iOS Auto Build and Deploy

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'GitHub repository URL'
        required: true
        type: string
      app_name:
        description: 'App name for App Store'
        required: true
        type: string
      bundle_identifier:
        description: 'Bundle identifier (e.g., com.company.app)'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_url }}
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    
    - name: Install Fastlane
      run: gem install fastlane
    
    - name: Create API Key
      run: |
        mkdir -p ~/.appstoreconnect/private_keys/
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}" > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}.p8
    
    - name: Create and Run Fastfile
      run: |
        mkdir -p fastlane
        cat > fastlane/Fastfile << 'FASTFILE_EOF'
        default_platform(:ios)
        
        platform :ios do
          lane :deploy do
            # Setup API key context
            app_store_connect_api_key(
              key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
              issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
              key_filepath: "~/.appstoreconnect/private_keys/AuthKey_#{ENV['APP_STORE_CONNECT_API_KEY_KEY_ID']}.p8"
            )
            
            # Create app
            produce(
              app_name: ENV["APP_NAME"],
              app_identifier: ENV["BUNDLE_IDENTIFIER"],
              language: "en-US",
              app_version: "1.0",
              sku: "#{ENV['BUNDLE_IDENTIFIER'].gsub('.', '-')}-#{Time.now.to_i}",
              skip_itc: false,
              skip_devcenter: false
            )
            
            puts "✅ App created successfully!"
            
            # Build project
            puts "Current directory: #{Dir.pwd}"
            puts "Available files: #{Dir.glob("*").join(", ")}"
            
            workspace_path = Dir.glob("*.xcworkspace").first
            project_path = Dir.glob("*.xcodeproj").first
            
            if workspace_path
              build_app(
                workspace: workspace_path,
                scheme: File.basename(workspace_path, ".xcworkspace"),
                configuration: "Release",
                skip_package_ipa: true,
                xcargs: "CODE_SIGNING_ALLOWED=NO"
              )
            elsif project_path
              build_app(
                project: project_path,
                scheme: File.basename(project_path, ".xcodeproj"),
                configuration: "Release",
                skip_package_ipa: true,
                xcargs: "CODE_SIGNING_ALLOWED=NO"
              )
            else
              UI.user_error!("No Xcode project found!")
            end
            
            puts "✅ Build completed successfully!"
          end
        end
        FASTFILE_EOF
        
        fastlane deploy
      env:
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
        APP_NAME: ${{ github.event.inputs.app_name }}
        BUNDLE_IDENTIFIER: ${{ github.event.inputs.bundle_identifier }}
