name: iOS Auto Build and Deploy

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'GitHub repository URL'
        required: true
        type: string
      app_name:
        description: 'App name for App Store'
        required: true
        type: string
      bundle_identifier:
        description: 'Bundle identifier (e.g., com.company.app)'
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repo_url }}
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
    
    - name: Install Fastlane
      run: gem install fastlane
    
    - name: Create API Key
      run: |
        mkdir -p ~/.appstoreconnect/private_keys/
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}" > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}.p8
    
    - name: Create App on App Store Connect
      run: |
        # Setup API key first
        fastlane run app_store_connect_api_key \
          key_id:"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}" \
          issuer_id:"${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}" \
          key_filepath:"~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}.p8"
        
        # Create app
        fastlane run produce \
          app_name:"${{ github.event.inputs.app_name }}" \
          app_identifier:"${{ github.event.inputs.bundle_identifier }}" \
          language:"en-US" \
          app_version:"1.0" \
          sku:"$(echo "${{ github.event.inputs.bundle_identifier }}" | sed 's/\./-/g')-$(date +%s)" \
          skip_itc:false \
          skip_devcenter:false \
          team_id:"${{ secrets.DEVELOPER_TEAM_ID }}"
      env:
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
    
    - name: Build Project
      run: |
        echo "Current directory: $(pwd)"
        echo "Available files: $(ls -la)"
        
        if ls *.xcworkspace 1> /dev/null 2>&1; then
          echo "Found workspace, building..."
          WORKSPACE=$(ls *.xcworkspace | head -1)
          SCHEME=$(basename "$WORKSPACE" .xcworkspace)
          echo "Building workspace: $WORKSPACE with scheme: $SCHEME"
          fastlane run build_app workspace:"$WORKSPACE" scheme:"$SCHEME" configuration:"Release" skip_package_ipa:true xcargs:"CODE_SIGNING_ALLOWED=NO"
        elif ls *.xcodeproj 1> /dev/null 2>&1; then
          echo "Found project, building..."
          PROJECT=$(ls *.xcodeproj | head -1)
          SCHEME=$(basename "$PROJECT" .xcodeproj)
          echo "Building project: $PROJECT with scheme: $SCHEME"
          fastlane run build_app project:"$PROJECT" scheme:"$SCHEME" configuration:"Release" skip_package_ipa:true xcargs:"CODE_SIGNING_ALLOWED=NO"
        else
          echo "No Xcode project found!"
          exit 1
        fi
        
        echo "âœ… Build completed successfully!"
      env:
        FASTLANE_SKIP_2FA_UPGRADE: 1
        FASTLANE_HIDE_CHANGELOG: 1
